import React, {Component, Fragment} from 'react';
import { connect } from 'react-redux';
import Header from 'components/Header';
import Footer from 'components/Footer';
import Map from './Map';
import Modal from 'components/Modal';

class Contacts extends Component {
  constructor(props) {
    super(props);

    this.state = {
      displayModal: false,
      visibleModal: false,
      dataModal: {}
    };

    this.togglePopup = this.togglePopup.bind(this);
  }

  togglePopup() {
    const { displayModal, visibleModal } = this.state;

    if(!displayModal) {
      this.setState({
        displayModal: !displayModal,
        dataModal: {
          form: 'form-callback',
        }
      });
      setTimeout(() => {
        this.setState({visibleModal: !visibleModal});
      }, 5);
    } else {
      this.setState({visibleModal: !visibleModal});
      setTimeout(() => {
        this.setState({displayModal: !displayModal});
      }, 200);
    }
  }

  render() {
    const { siteSettings } = this.props;
    const { displayModal, visibleModal, dataModal } = this.state;

    return (
      <Fragment>
        <Header />
        <main className="main page-contacts">
          <div className="page-contacts__main">
            <div className="pcon-main">
              <div className="container">
                <div className="row">
                  <div className="col-12">
                    <h1 className="pcon-main__title">Контакты</h1>
                  </div>
                  <div className="col-12">
                    <div className="pcon-main__map card-contacts-map">
                      <div className="card-contacts-map__head">
                        <div className="card-contacts-map__phone contact-sm-title">
                          <p>Телефон</p>
                          { siteSettings.contact_phone && <a href={`tel:${siteSettings.contact_phone}`}>{siteSettings.contact_phone}</a> }
                        </div>
                        <div className="card-contacts-map__mail contact-sm-title">
                          <p>Email</p>
                          { siteSettings.contact_email && <a href={`mailto:${siteSettings.contact_email}`}>{siteSettings.contact_email}</a> }
                        </div>
                        <div className="card-contacts-map__adress contact-sm-title">
                          {/* <p>Адрес</p>
                          <p>с. Малый Маяк, ул. Виноградная 65а</p> */}
                        </div>
                        <div className="card-contacts-map__button">
                          <button
                            className="btn btn_color_ac"
                            onClick={this.togglePopup}
                          >Связаться с нами</button>
                        </div>
                      </div>
                      <Map />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <Footer />
        </main>
        {
          displayModal && <Modal
            display={displayModal}
            visible={visibleModal}
            data={dataModal}
            title={"Оставьте заявку"}
            desc={"<p>менеджер разъяснит все детали и подберет<br /> удобное время для визита к нам в офис</p>"}
            button={"Отправить"}
            onClose={this.togglePopup}
          />
        }
      </Fragment>
    );
  }
}

const mapStateToProps = state => ({
  siteSettings: state.siteSettings
});

export default connect(mapStateToProps, null)(Contacts);