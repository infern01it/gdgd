import React from 'react';
import {connect} from 'react-redux';

import {fetchSettings, fetchArrays, fetchCity, fetchConcept, fetchAllPages, updateWindowWidth} from 'actions';

class App extends React.Component {
  constructor(props) {
    super(props);

    this.ready = this.ready.bind(this);
  }

  ready() {
    const { arrays, city, concept, pages, siteSettings } = this.props;

    return Object.keys(arrays).length !== 0 && Object.keys(city).length !== 0 && Object.keys(concept).length !== 0 && Object.keys(pages).length !== 0 && Object.keys(siteSettings).length !== 0;
  }

  componentDidMount() {
    const { fetchSettings, fetchArrays, fetchCity, fetchConcept, fetchAllPages, updateWindowWidth } = this.props;

    fetchSettings();
    fetchArrays();
    fetchCity();
    fetchConcept();
    fetchAllPages();

    updateWindowWidth(document.body.clientWidth);
    window.addEventListener('resize', function() {
      updateWindowWidth(document.body.clientWidth);
    });
  }

  render() {
    if( this.ready() ) {
      return this.props.children;
    } else {
      return <span>Загрузка</span>;
    }
  }
}

const mapStateToProps = (state) => ({
  arrays: state.arrays,
  city: state.city,
  concept: state.concept,
  pages: state.pages,
  siteSettings: state.siteSettings,
});

const mapDispatchToProps = {
  fetchSettings,
  fetchArrays,
  fetchCity,
  fetchConcept,
  fetchAllPages,
  updateWindowWidth
};

export default connect(mapStateToProps, mapDispatchToProps)(App);
