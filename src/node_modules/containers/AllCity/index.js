import React, {Component, Fragment} from 'react';
import {connect} from 'react-redux';

import {fetchArrays} from 'actions';
import {toArr, getPlots, getFilterProps, filteringArrays} from 'selectors';

import Header from 'components/Header';
import MainFilter from 'components/MainFilter';
import { CardArray } from 'components/CardArray';
//import { CardSite } from 'components/CardSite';

import Map from './Map';

class AllCity extends Component {
  constructor(props) {
    super(props);

    this.state = {
      displayFilter: false,
      visibleFilter: false,
      displayMap: false,
      visibleMap: false
    };

    this.toggleFilter = this.toggleFilter.bind(this);
    this.toggleMap = this.toggleMap.bind(this);
  }

	componentDidMount() {
    this.props.fetchArrays();
  }
  
  toggleMap() {
    const { displayMap, visibleMap } = this.state;

    if(!displayMap) {
      this.setState({displayMap: !displayMap});
      setTimeout(() => {
        this.setState({visibleMap: !visibleMap});
      }, 5);
    } else {
      this.setState({visibleMap: !visibleMap});
      setTimeout(() => {
        this.setState({displayMap: !displayMap});
      }, 300);
    }
  }

  toggleFilter() {
    const { displayFilter, visibleFilter } = this.state;

    if(!displayFilter) {
      this.setState({displayFilter: !displayFilter});
      setTimeout(() => {
        this.setState({visibleFilter: !visibleFilter});
      }, 5);
    } else {
      this.setState({visibleFilter: !visibleFilter});
      setTimeout(() => {
        this.setState({displayFilter: !displayFilter});
      }, 300);
    }
  }

  render() {
    const {allArrays, arrays, filterProps, filter} = this.props;
    const { displayFilter, visibleFilter, displayMap, visibleMap } = this.state;

    const filterArrays = toArr(arrays);
    const filterArraysLength = toArr(arrays).length;
    const filterPlotsLength = toArr(getPlots(arrays)).length;

    return (
      <Fragment>
        <Header/>
        <main className="main page-map">
          <div className="page-map__toggle-navs map-tgl-navs">
            <button
              onClick={this.toggleFilter}
              className="map-tgl-navs__filter"
            >
              <span>Фильтр</span>
            </button>
            <button
              onClick={this.toggleMap}
              className="map-tgl-navs__map"
            >
              <span>Карта</span>
            </button>
          </div>
          <MainFilter
            pageMap={true}
            filter={filter}
            display={displayFilter}
            visible={visibleFilter}
            toggleFilter={this.toggleFilter}
          />
          <div className="page-map__cards map-cards">
            <div className="map-cards__head">
              <h1 className="map-cards__title">Найдено {filterPlotsLength} участков в {filterArraysLength} массивах</h1>
            </div>
            <div className="map-cards__body">
              {/* <CardSite
                id="1"
                name="Участок 24"
                adress="с. Малый Маяк, ул. Виноградная 65а вторая строка"
                area="0.36"
                price="6.5"
              /> */}

              {
                filterArrays.length !== 0 && filterArrays.map((element, id) => {
                  return <CardArray
                    key={id}
                    id={element.id}
                    count={element.land_plots.length}
                    urlImg={element.main_img.size.sm.url}
                    name={element.name}
                    price100={element.price_100}
                    addClass={['map-cards__item']}
                  />
                })
              }

            </div>
          </div>
          {
            arrays.length !== 0 && <Map
              arrays={allArrays}
              filterProps={filterProps}
              display={displayMap}
              visible={visibleMap}
            />
          }
        </main>
      </Fragment>
    );
  }
}

const mapStateToProps = (state) => ({
  arrays: filteringArrays(state.arrays, state.filterProps),
  allArrays: toArr(state.arrays),
  filterProps: getFilterProps(state)
});

const mapDispatchToProps = {
  fetchArrays
};

export default connect(mapStateToProps, mapDispatchToProps)(AllCity);