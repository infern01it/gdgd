import React, {Component, Fragment} from 'react';
import {connect} from 'react-redux';

import {fetchArrays} from 'actions';
import {getArrays, getFilterProps, getFilteringArrays} from 'selectors';

import Header from 'components/Header';
import MainFilter from 'components/MainFilter';
import { CardArray } from 'components/CardArray';
//import { CardSite } from 'components/CardSite';

import Map from './Map';

class AllCity extends Component {

	componentDidMount() {
		this.props.fetchArrays();
	}

  render() {
    const {arrays, filterArrays, filterProps, filter} = this.props;

    return (
      <Fragment>
        <Header/>
        <main className="main page-map">
          <div className="page-map__toggle-navs map-tgl-navs">
            <button className="map-tgl-navs__filter">
              <span>Фильтр</span>
            </button>
            <button className="map-tgl-navs__map">
              <span>Карта</span>
            </button>
          </div>
          <MainFilter
            pageMap={true}
            filter={filter}
          />
          <div className="page-map__cards map-cards">
            <div className="map-cards__head">
              <h1 className="map-cards__title">Найдено 38 участков в 5 массивах</h1>
            </div>
            <div className="map-cards__body">
              {/* <CardSite
                id="1"
                name="Участок 24"
                adress="с. Малый Маяк, ул. Виноградная 65а вторая строка"
                area="0.36"
                price="6.5"
              /> */}

              {
                filterArrays.length !== 0 && filterArrays.map((element, id) => {
                  return <CardArray
                    key={id}
                    id={element.id}
                    count={element.land_plots.length}
                    urlImg={element.main_img.size.sm.url}
                    name={element.name}
                    price100={element.price_100}
                    addClass={['map-cards__item']}
                  />
                })
              }

            </div>
          </div>
          {
            arrays.length !== 0 && <Map
              arrays={arrays}
              filterProps={filterProps}
            />
          }
        </main>
      </Fragment>
    );
  }
}

const mapStateToProps = (state) => ({
  arrays: getArrays(state),
  filterArrays: getFilteringArrays(state),
  filterProps: getFilterProps(state)
});

const mapDispatchToProps = {
  fetchArrays
};

export default connect(mapStateToProps, mapDispatchToProps)(AllCity);