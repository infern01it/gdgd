import React, { Component } from 'react';
import classnames from 'classnames';

import { getCoords, filteringMap } from 'selectors';

import pinIcon from 'components/UiIcon/pin.svg';

let myMap, points;
const yMaps = window.ymaps;

class Map extends Component {
  constructor(props) {
    super(props);
  }
  
  componentWillMount() {
    const { arrays, filterProps } = this.props;

    yMaps.ready(() => {
      myMap = new yMaps.Map('map', {
          center: [44.862862, 34.369187],
          zoom: 9,
          controls: ['zoomControl', 'fullscreenControl']
        }, {
          searchControlProvider: 'yandex#search'
        });

      const getFeatureCollection = el => {
        return {
          type: 'Feature',
          geometry: {
            type: 'Point',
            coordinates: el.coords !== '' ? getCoords(el.coords) : [0, 0]
          },
          properties: {
            price_total: el.price_total,
            area: el.area,
            city_id: el.city_id,
            concept: el.concept,
            land_plots: el.land_plots,
            hintContent: el.name
          },
          options: {
            iconLayout: 'default#image',
            iconImageHref: pinIcon,
            iconImageSize: [24, 33],
            iconImageOffset: [-12, -33]
          },
          click: () => {
            console.log('click');
          }
        };
      }

      points = yMaps.geoQuery({
        type: 'FeatureCollection',
        features: arrays.map(el => getFeatureCollection(el))
      });

      let result = new yMaps.GeoQueryResult();
      result = points.search(el => filteringMap(el, filterProps));
  
      const shownObjects = result.addToMap(myMap);
      points.remove(shownObjects).removeFromMap(myMap);

      // Нужно как-то изменить чтоб размер карты менялся только при её сворачивании и разворачивании
      setTimeout(function() {
        myMap.container.fitToViewport();

        if( result._objects.length === 0 ) { // Если не найдено ни 1 объекта
          myMap.setCenter([44.862862, 34.369187], 9); 
        } else if( result._objects.length === 1 ) { // Если найден 1 объект
          myMap.setCenter(myMap.geoObjects.getBounds()[0], 15);
        } else { // Если не найдено больше 1 объекта
          myMap.setBounds(myMap.geoObjects.getBounds());
        }
      }, 301);
    });
  }

  componentWillUpdate(nextProps) {
    const { filterProps, centerMap } = nextProps;

    yMaps.ready(() => {
      let result = new yMaps.GeoQueryResult();
      result = points.search(el => filteringMap(el, filterProps));

      const shownObjects = result.addToMap(myMap);
      points.remove(shownObjects).removeFromMap(myMap);

      // Нужно как-то изменить чтоб размер карты менялся только при её сворачивании и разворачивании
      setTimeout(function() {
        myMap.container.fitToViewport();

        if( centerMap.length === 0 ) {
          if( result._objects.length === 0 ) { // Если не найдено ни 1 объекта
            myMap.setCenter([44.862862, 34.369187], 9);
          } else if( result._objects.length === 1 ) { // Если найден 1 объект
            myMap.setCenter(myMap.geoObjects.getBounds()[0], 12);
          } else { // Если не найдено больше 1 объекта
            myMap.setBounds(myMap.geoObjects.getBounds());
          }
        } else {
          myMap.setCenter(centerMap, 15);
        }
      }, 301);
    });
  }

  render() {
    const { display, visible, className } = this.props;

    const mapYMapClass = classnames(
      'page-map__ymap',
      'map-ymap',
      {
        'display': display,
        'visible': visible
      },
      className
    );

    return (
      <div
        className={mapYMapClass}
        id="map"
      ></div>
    );
  }
}

export default Map;