import React, {Component} from 'react';
import {connect} from 'react-redux';

import {fetchArrays, filterArrays} from 'actions';
import {getArrays} from 'selectors';

class Arrays extends Component {
	constructor(props) {
		super(props);

		this.state = {
			filterArraysPriceStart: 0,
			filterArraysPriceEnd: 0
		}
	}

	componentDidMount() {
		this.props.fetchArrays();
	}

	filterArrays(e, type) {
		const price = parseInt(e.target.value);
		switch(type) {
			case 0:
				this.setState({
					filterArraysPriceStart: price
				});
				break;
			case 1:
				this.setState({
					filterArraysPriceEnd: price
				});
				break;
			default:
				break;
		}
	}

	render() {
		const {arrays} = this.props;
		const state = this.state;
		console.log(state);
		return (
			<div>
				<p>
					<label>Цена от</label>
					<input onChange={e => this.filterArrays(e, 0)} />
				</p>
				<p>
					<label>Цена до</label>
					<input onChange={e => this.filterArrays(e, 1)} />
				</p>

				{
					arrays.map((item, id) => (
						<ul key={id}>
							<li>{item.name}</li>
							<li>{item.sity_id}</li>
							<li>{item.price_total}</li>
							<li>{item.price_100}</li>
							<li>{item.coords[0]}, {item.coords[1]}</li>
							<li>
									{
										item.props.map((item, id) => (
											<ul key={id}>
												<li>{item.title}</li>
												<li>{item.desc}</li>
											</ul>
										))
									}
							</li>
						</ul>
					))
				}

			</div>
		);
	}
}

const mapStateToProps = state => ({
	arrays: getArrays(state)
});

const mapDispatchToProps = {
	fetchArrays,
	filterArrays
};

export default connect(mapStateToProps, mapDispatchToProps)(Arrays);