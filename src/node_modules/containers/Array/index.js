import React, {Component, Fragment} from 'react';
import {connect} from 'react-redux';

import {fetchArrays} from 'actions';
import {getArray} from 'selectors';

import Header from 'components/Header';
import ArrayMain from './ArrayMain';

import ArrayProps from 'containers/Array/ArrayProps';
import ArrayContent from 'containers/Array/ArrayContent';
import ArrayMedia from 'containers/Array/ArrayMedia';
import ArrayIcons from 'containers/Array/ArrayIcons';
import ArraySlider from 'containers/Array/ArraySlider';
import ArrayPlots from 'containers/Array/ArrayPlots';


class Array extends Component {

	componentDidMount() {
		this.props.fetchArrays();
  }

  ready(data) {
    return typeof data === 'object';
  }
  
  render() {
    const { array } = this.props;

    return (
      <Fragment>
        <Header/>
        	<main className="main page-array">
            {
              this.ready(array) && <ArrayMain 
                name={array.name}
                mainImg={array.main_img.url}
              />
            }
            {
              this.ready(array) && <ArrayProps
                area={array.area}
                price={array.price_total}
                count={array.land_plots.length}
                coords={array.coords}
                legalSystem={array.legal_system}
              />
            }
            
            {
              this.ready(array) && <ArrayContent
                desc={{__html: array.desc}}
              />
            }

            <ArrayMedia />
            
            {
              this.ready(array) && <ArrayIcons
                infrastructure={array.infrastructure}
              />
            }
            <ArrayIcons />

            <ArraySlider />

            {
              this.ready(array) && <ArrayPlots
                arrayPlots={array.land_plots}
              />
            }
            
          </main>

      </Fragment>
    );
  }
}


const mapStateToProps = (state, ownProps) => ({
  array: getArray(state, ownProps)
});

const mapDispatchToProps = {
	fetchArrays
};

export default connect(mapStateToProps, mapDispatchToProps)(Array);