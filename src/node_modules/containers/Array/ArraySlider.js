import React, {Component, Fragment} from 'react';

import Slider from "react-slick";

import classnames from 'classnames';

import {ArrowLeft, ArrowRight} from 'components/UiIcon';

class ArraySlider extends Component {
  constructor(props) {
    super(props);

    this.state = {
      slideIndex: 0,
      updateCount: 0
    };
  }

  render() {
    const { arrayImg } = this.props;

    const settings = {
      dots: true,
      infinite: true,
      speed: 500,
      slidesToShow: 1,
      slidesToScroll: 1,
      className: "b-slider__container",
      dots: false,
      arrows: false,
      adaptiveHeight: true,
      afterChange: () =>
        this.setState(state => ({ updateCount: state.updateCount + 1 })),
      beforeChange: (current, next) => this.setState({ slideIndex: next })
    };

    return arrayImg.length != 0 ? <div className="page-array__slider parr-slider">
      <div className="container">
        <div className="row">
          <div className="col-12">
            <div className="parr-slider__slider b-slider">
              { arrayImg.length != 1 && <Fragment>
                <button
                  className="b-slider__prev"
                  onClick={() => this.slider.slickPrev()}
                >
                  <ArrowLeft />
                </button>
                <button
                  className="b-slider__next"
                  onClick={() => this.slider.slickNext()}
                >
                  <ArrowRight />
                </button>
                <div className="b-slider__dots">
                  {
                    arrayImg.map((el, id) => {
                      return <button
                        key={id}
                        className={classnames("b-slider__dot", {"active": this.state.slideIndex === id})}
                        onClick={() => this.slider.slickGoTo(id)}
                      ></button>
                    })
                  }
                </div>
              </Fragment> }
              <Slider ref={slider => (this.slider = slider)} {...settings} >
                {
                  arrayImg.map((el, id) => {
                    return (
                      <div
                        key={id}
                        className="b-slider__item"
                      >
                        <img src={`${el.url}`} />
                      </div>
                    );
                  })
                }
              </Slider>
            </div>
          </div>
        </div>
      </div>
    </div> : null;
  }
}

export default ArraySlider;