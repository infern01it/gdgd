import React, {Component} from 'react';
import {connect} from 'react-redux';

import {fetchArrays} from 'actions';
import {getArrays} from 'selectors';

import Header from 'components/Header';
import MainFilter from 'components/MainFilter';
import { CardArray } from 'components/CardArray';

let myMap, clusterer, getPointData, points = [], geoObjects = [];

class MapPage extends Component {

	componentDidMount() {
		this.props.fetchArrays();
	}

  componentWillMount() {
    window.ymaps.ready(function () {
      myMap = new window.ymaps.Map('map', {
        center: [55.751574, 37.573856],
        zoom: 9
      }, {
        searchControlProvider: 'yandex#search'
      });
      clusterer = new window.ymaps.Clusterer({
        preset: 'islands#invertedVioletClusterIcons',
        clusterNumbers: [10],
        clusterIconContentLayout: null
      });
      getPointData = index => {
        return {
          balloonContentBody: 'балун <strong>метки ' + index + '</strong>',
          clusterCaption: 'метка <strong>' + index + '</strong>'
        };
      };
      points = [
        [55.831903, 37.411961], [55.763338, 37.565466], [55.763338, 37.565466], [55.744522, 37.616378], [55.780898, 37.642889], [55.793559, 37.435983], [55.800584, 37.675638], [55.716733, 37.589988], [55.775724, 37.560840], [55.822144, 37.433781], [55.874170, 37.669838], [55.716770, 37.482338], [55.780850, 37.750210], [55.810906, 37.654142], [55.865386, 37.713329], [55.847121, 37.525797], [55.778655, 37.710743], [55.623415, 37.717934], [55.863193, 37.737000], [55.866770, 37.760113], [55.698261, 37.730838], [55.633800, 37.564769], [55.639996, 37.539400], [55.690230, 37.405853], [55.775970, 37.512900], [55.775777, 37.442180], [55.811814, 37.440448], [55.751841, 37.404853], [55.627303, 37.728976], [55.816515, 37.597163], [55.664352, 37.689397], [55.679195, 37.600961], [55.673873, 37.658425], [55.681006, 37.605126], [55.876327, 37.431744], [55.843363, 37.778445], [55.875445, 37.549348], [55.662903, 37.702087], [55.746099, 37.434113], [55.838660, 37.712326], [55.774838, 37.415725], [55.871539, 37.630223], [55.657037, 37.571271], [55.691046, 37.711026], [55.803972, 37.659610], [55.616448, 37.452759], [55.781329, 37.442781], [55.844708, 37.748870], [55.723123, 37.406067], [55.858585, 37.484980]
      ];
      geoObjects = [];

      for (var i = 0, len = points.length; i < len; i++) {
        geoObjects[i] = new window.ymaps.Placemark(points[i], getPointData(i));
      }

      clusterer.add(geoObjects);
      myMap.geoObjects.add(clusterer);

      myMap.setBounds(clusterer.getBounds(), {
        checkZoomRange: true
      });
    });
  }

  render() {
		const {arrays} = this.props;
    return (
      <div>
        <Header/>
        <main className="main page-map">
          <div className="page-map__toggle-navs map-tgl-navs">
            <button className="map-tgl-navs__filter">
              <span>Фильтр</span>
            </button>
            <button className="map-tgl-navs__map">
              <span>Карта</span>
            </button>
          </div>
          <MainFilter
            pageMap={true}
          />
          <div className="page-map__cards map-cards">
            <div className="map-cards__head">
              <h1 className="map-cards__title">Найдено 38 участков в 5 массивах</h1>
            </div>
            <div className="map-cards__body">
              {/* <div className="card-site map-cards__item">
                <div className="card-site__left">
                  <div className="card-site__title">
                    <a href="#" className="h4">Участок 24</a>
                  </div>
                  <div className="card-site__adress">
                    <p>с. Малый Маяк, ул. Виноградная 65а вторая строка</p>
                  </div>
                </div>
                <div className="card-site__middle">
                  <div className="card-site__area b-site-prop">
                    <img src="/img/ui-icon/area.svg" className="img-svg b-site-prop__icon" />
                    <span className="b-site-prop__desc">36 соток</span>
                  </div>
                  <div className="card-site__price b-site-prop">
                    <img src="/img/ui-icon/price.svg" className="img-svg b-site-prop__icon" />
                    <span className="b-site-prop__desc">6,5 млн. руб.</span>
                  </div>
                </div>
                <div className="card-site__right">
                  <button className="btn btn_color_ac card-site__button">Купить участок</button>
                </div>
              </div> */}

              {
                arrays.length !== 0 && arrays.map((element, id) => {
                  return <CardArray
                    key={id}
                    id={element.id}
                    count={element.land_plots.length + 1}
                    urlImg={element.main_img.link}
                    name={element.name}
                    price100={element.price_100}
                    addClass={['map-cards__item']}
                  />
                })
              }

            </div>
          </div>
          <div className="page-map__ymap map-ymap" id="map">
            
          </div>
        </main>
      </div>
    );
  }
}

const mapStateToProps = state => ({
	arrays: getArrays(state)
});

const mapDispatchToProps = {
	fetchArrays
};

export default connect(mapStateToProps, mapDispatchToProps)(MapPage);