import React, {Component, Fragment} from 'react';
import {connect} from 'react-redux';

import {fetchArrays} from 'actions';
import {getPlots} from 'selectors';

import Header from 'components/Header';
import MainFilter from 'components/MainFilter';
import { CardSite2 } from 'components/CardSite2';

import {Sort, ArrowLeft, ArrowRight} from 'components/UiIcon';

class Plots extends Component {

	componentDidMount() {
		this.props.fetchArrays();
	}

  render() {
    const {plots} = this.props;
    return (
      <Fragment>
        <Header/>
        <main className="main page-site">
          <div className="page-site__toggle-navs psit-tgl-navs">
            <button className="psit-tgl-navs__filter">
              <span>Фильтр</span>
            </button>
          </div>
          <MainFilter
            pagePlace={true}
          />
          <div className="page-site__main">
            <div className="page-site__site psit-site">
              <div className="container">
                <div className="row">
                  <div className="col-12">
                    <h1 className="psit-site__title">Все участки (451 шт.)</h1>
                  </div>
                  <div className="col-12">
                    <div className="psit-site__filter psit-filter">
                      <span className="psit-filter__title">Сортировать:</span>
                      <button className="psit-filter__price">
                        <Sort />
                        <span>по цене</span>
                      </button>
                      <button className="psit-filter__area active">
                        <Sort />
                        <span>по площади</span>
                      </button>
                    </div>
                  </div>
                </div>
                <div className="row">
                  {
                    plots.length !== 0 && plots.map((element, id) => {
                      return (
                        <div
                          key={id}
                          className="col-12"
                        >
                          <CardSite2
                            name={element.name}
                            arrayName={element.array_name}
                            adress={element.adress}
                            area={element.area}
                            price={element.price_total}
                          />
                        </div>
                      );
                    })
                  }
					      	<div className="col-12">
                    <CardSite2
                      name="Участок 24"
                      arrayName="Массив Большая Алушта с. Изобильное"
                      adress="с. Малый Маяк, ул. Виноградная 65а вторая строка"
                      area="0.36"
                      price="6.5"
                    />
					      	</div>
                </div>
              </div>
            </div>
            
            <div className="page-site__paginator">
              <div className="container">
                <div className="row">
                  <div className="col-12">
                    <div className="paginator">
                      <a className="btn btn_arrow_left btn_color_white-f paginator__prev" href="#">
                        <ArrowLeft />
                        <span>Предыдущая</span>
                      </a>
                      <div className="paginator__number">
                        <a className="btn btn_sm btn_color_white-f" href="#">1</a>
                        <a className="btn btn_sm btn_color_white-f" href="#">2</a>
                        <a className="btn btn_sm btn_color_white-f" href="#">3</a>
                        <a className="btn btn_sm btn_color_white-f" href="#">4</a>
                      </div>
                      <a className="btn btn_arrow_right btn_color_white-f paginator__next" href="#">
                        <span>Следующая</span>
                        <ArrowRight />
                      </a>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </main>
      </Fragment>
    );
  }
}

const mapStateToProps = state => ({
	plots: getPlots(state)
});

const mapDispatchToProps = {
	fetchArrays
};

export default connect(mapStateToProps, mapDispatchToProps)(Plots);