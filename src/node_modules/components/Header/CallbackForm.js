import React from 'react';
import { Field, reduxForm, SubmissionError } from 'redux-form';
import InputMask from 'react-input-mask';
import classNames from 'classnames';

class CallbackForm extends React.Component {
  phoneInput({ input, meta: { touched, error }, ...custom }) {
    const hasError = touched && error !== undefined;
    const inputClassName = classNames('form-field popup-wrap__input', { 'error': hasError });
    return (
      <div className={inputClassName}>
        <InputMask
          mask="+7 (999) 999 99 99"
          maskChar="_"
          className="form-field__input"
          {...input}
          {...custom}
        />
        { hasError && <span className="form-field__msg">{error}</span> }
      </div>
    );
  }

  render() {
    const { handleSubmit } = this.props;

    return (
      <form
        className="hdr-callback__dropdown hdr-cb-dd"
        onSubmit={handleSubmit}
      >
        <h4 className="hdr-cb-dd__title">Обратный звонок</h4>
        <div className="form-field hdr-cb-dd__input">
          <Field
            name="phone"
            component={this.phoneInput}
            placeholder="Телефон"
          />
        </div>
        <button
          type="submit"
          className="btn btn_color_ac hdr-cb-dd__button"
        >Перезвоните мне</button>
      </form>
    );
  }
}

export default reduxForm({
  form: 'header',
})(CallbackForm);